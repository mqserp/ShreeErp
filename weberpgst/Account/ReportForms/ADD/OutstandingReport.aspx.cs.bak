using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Data;
using CrystalDecisions.CrystalReports.Engine;
using System.Data.SqlClient;
using System.Data.Sql;


public partial class RoportForms_ADD_OutstandingReport : System.Web.UI.Page
{
    DatabaseAccessLayer DL_DBAccess = null;
    clsSqlDatabaseAccess cls = new clsSqlDatabaseAccess();

    protected void Page_Load(object sender, EventArgs e)
    {
    }

    #region Page_Init
    protected void Page_Init(object sender, EventArgs e)
    {
        try
        {
            string Title = Request.QueryString[0];

            bool All_CUST = Convert.ToBoolean(Request.QueryString[1].ToString());


            string ToDate = Request.QueryString[2].ToString();
            int p_name = Convert.ToInt32(Request.QueryString[3].ToString());
            string rbtGroup = Request.QueryString[4].ToString();
            string ddlType = Request.QueryString[5].ToString();
            string rbtReportType = Request.QueryString[6].ToString();
            string cond = Request.QueryString[7].ToString();
            string CondInv = Request.QueryString[8].ToString();
            string CondiCredit = Request.QueryString[9].ToString();
            string CondiDebit = Request.QueryString[10].ToString();
            GenerateReport(Title, All_CUST, ToDate, p_name, rbtGroup, ddlType, rbtReportType, cond, CondInv, CondiCredit, CondiDebit);
        }
        catch (Exception Ex)
        {
        }
    }
    #endregion

    #region GenerateReport
    private void GenerateReport(string Title, bool All_CUST, string ToDate, int p_name, string rbtGroup, string ddlType, string rbtReportType, string cond, string CondInv, string CondiCredit, string CondiDebit)
    {
        try
        {

            DataTable dtOutstanding = new DataTable();
            if (rbtReportType.ToString() == "0")
            {
                if (ddlType.ToString() == "0")
                    dtOutstanding = CommonClasses.Execute("declare @temp table(Id int NOT NULL identity(1,1),P_CODE int,P_NAME varchar(500),P_ADD1 varchar(max),P_CONTACT varchar(500),P_PHONE varchar(500),BPM_INV_NO varchar(500),BPM_DATE datetime,BPM_PAYABLE_AMT float,INM_NO varchar(500),INM_DATE datetime,INM_RECV_AMT float,DUE_DATE datetime,DUE_DAYS int,flag bit) insert into @temp select P_CODE,P_NAME,P_ADD1,P_CONTACT,P_PHONE,BPM_INV_NO,ISNULL(BPM_DATE,'') AS BPM_DATE,isnull(BPM_G_AMT,0)-isnull(BPM_PAID_AMT,0) as BPM_PAYABLE_AMT,0,null,0,DATEADD(DAY,convert(int,P_CREDITDAYS),BPM_DATE),DATEDIFF(day,DATEADD(DAY,convert(int,P_CREDITDAYS),BPM_DATE),GETDATE()),0 from BILL_PASSING_MASTER,PARTY_MASTER where " + cond + " BPM_P_CODE=P_CODE and BILL_PASSING_MASTER.ES_DELETE=0 and PARTY_MASTER.ES_DELETE=0 and BPM_G_AMT-ISNULL(BPM_PAID_AMT,0)>0 insert into @temp select P_CODE,P_NAME,P_ADD1,P_CONTACT,P_PHONE,0,null,0,INM_NO,INM_DATE,isnull(INM_G_AMT,0)-isnull(INM_RECIEVED_AMT,0),DATEADD(DAY,convert(int,P_CREDITDAYS),INM_DATE),DATEDIFF(day,DATEADD(DAY,convert(int,P_CREDITDAYS),INM_DATE),GETDATE()),1 from INVOICE_MASTER,PARTY_MASTER where " + CondInv + " INM_P_CODE=P_CODE and INVOICE_MASTER.ES_DELETE=0 and  PARTY_MASTER.ES_DELETE=0 and INM_G_AMT-ISNULL(INM_RECIEVED_AMT,0)>0 insert into @temp select P_CODE,P_NAME,P_ADD1,P_CONTACT,P_PHONE,CNM_SERIAL_NO ,CNM_DATE ,isnull(CNM_NET_AMOUNT,0)-isnull(CNM_RECIEVED_AMT,0) ,0 ,null ,0 ,DATEADD(DAY,convert(int,P_CREDITDAYS),CNM_DATE),DATEDIFF(day,DATEADD(DAY,convert(int,P_CREDITDAYS),CNM_DATE),GETDATE()),CASE P_TYPE when 1 then 1 else 0 end  from CREDIT_NOTE_MASTER,PARTY_MASTER where " + CondiCredit + " CNM_CUST_CODE=P_CODE and CREDIT_NOTE_MASTER.ES_DELETE=0 and PARTY_MASTER.ES_DELETE=0 and CNM_NET_AMOUNT-ISNULL(CNM_RECIEVED_AMT,0)>0  insert into @temp select P_CODE,P_NAME,P_ADD1,P_CONTACT,P_PHONE, 0,null,0 ,DNM_SERIAL_NO ,DNM_DATE ,isnull(DNM_NET_AMOUNT,0)-isnull(DNM_PAID_AMT,0),DATEADD(DAY,convert(int,P_CREDITDAYS),DNM_DATE),DATEDIFF(day,DATEADD(DAY,convert(int,P_CREDITDAYS),DNM_DATE),GETDATE()),CASE P_TYPE when 1 then 1 else 0 end   from DEBIT_NOTE_MASTER,PARTY_MASTER where " + CondiDebit + "  DNM_CUST_CODE=P_CODE and DEBIT_NOTE_MASTER.ES_DELETE=0 and PARTY_MASTER.ES_DELETE=0 and DNM_NET_AMOUNT-ISNULL(DNM_PAID_AMT,0)>0  select P_CODE ,P_NAME,P_ADD1 ,P_CONTACT ,P_PHONE,BPM_INV_NO ,case  when  BPM_DATE is NULL then INM_DATE else BPM_DATE end as BPM_DATE ,BPM_PAYABLE_AMT,INM_NO ,INM_DATE ,INM_RECV_AMT ,DUE_DATE ,DUE_DAYS ,flag  from @temp order by BPM_DATE delete from @temp");
                else if (ddlType.ToString() == "1")
                    dtOutstanding = CommonClasses.Execute("declare @temp table(Id int NOT NULL identity(1,1),P_CODE int,P_NAME varchar(500),P_ADD1 varchar(max),P_CONTACT varchar(500),P_PHONE varchar(500),BPM_INV_NO varchar(500),BPM_DATE datetime,BPM_PAYABLE_AMT float,INM_NO varchar(500),INM_DATE datetime,INM_RECV_AMT float,DUE_DATE datetime,DUE_DAYS int,flag bit) insert into @temp select P_CODE,P_NAME,P_ADD1,P_CONTACT,P_PHONE,BPM_INV_NO,ISNULL(BPM_DATE,'') AS BPM_DATE,isnull(BPM_G_AMT,0)-isnull(BPM_PAID_AMT,0) as BPM_PAYABLE_AMT,0,null,0,DATEADD(DAY,convert(int,P_CREDITDAYS),BPM_DATE),DATEDIFF(day,DATEADD(DAY,convert(int,P_CREDITDAYS),BPM_DATE),GETDATE()),0 from BILL_PASSING_MASTER,PARTY_MASTER where " + cond + " BPM_P_CODE=P_CODE and BILL_PASSING_MASTER.ES_DELETE=0 and PARTY_MASTER.ES_DELETE=0 and BPM_G_AMT-ISNULL(BPM_PAID_AMT,0)>0 insert into @temp select P_CODE,P_NAME,P_ADD1,P_CONTACT,P_PHONE,0,null,0,INM_NO,INM_DATE,isnull(INM_G_AMT,0)-isnull(INM_RECIEVED_AMT,0),DATEADD(DAY,convert(int,P_CREDITDAYS),INM_DATE),DATEDIFF(day,DATEADD(DAY,convert(int,P_CREDITDAYS),INM_DATE),GETDATE()),1 from INVOICE_MASTER,PARTY_MASTER where " + CondInv + " INM_P_CODE=P_CODE and INVOICE_MASTER.ES_DELETE=0 and  PARTY_MASTER.ES_DELETE=0 and INM_G_AMT-ISNULL(INM_RECIEVED_AMT,0)>0 insert into @temp select P_CODE,P_NAME,P_ADD1,P_CONTACT,P_PHONE,CNM_SERIAL_NO ,CNM_DATE ,isnull(CNM_NET_AMOUNT,0)-isnull(CNM_RECIEVED_AMT,0) ,0 ,null ,0 ,DATEADD(DAY,convert(int,P_CREDITDAYS),CNM_DATE),DATEDIFF(day,DATEADD(DAY,convert(int,P_CREDITDAYS),CNM_DATE),GETDATE()),CASE P_TYPE when 1 then 1 else 0 end  from CREDIT_NOTE_MASTER,PARTY_MASTER where " + CondiCredit + " CNM_CUST_CODE=P_CODE and CREDIT_NOTE_MASTER.ES_DELETE=0 and  PARTY_MASTER.ES_DELETE=0 and CNM_NET_AMOUNT-ISNULL(CNM_RECIEVED_AMT,0)>0  insert into @temp select P_CODE,P_NAME,P_ADD1,P_CONTACT,P_PHONE, 0,null,0 ,DNM_SERIAL_NO ,DNM_DATE ,isnull(DNM_NET_AMOUNT,0)-isnull(DNM_PAID_AMT,0),DATEADD(DAY,convert(int,P_CREDITDAYS),DNM_DATE),DATEDIFF(day,DATEADD(DAY,convert(int,P_CREDITDAYS),DNM_DATE),GETDATE()),CASE P_TYPE when 1 then 1 else 0 end   from DEBIT_NOTE_MASTER,PARTY_MASTER where " + CondiDebit + "  DNM_CUST_CODE=P_CODE and DEBIT_NOTE_MASTER.ES_DELETE=0 and PARTY_MASTER.ES_DELETE=0 and DNM_NET_AMOUNT-ISNULL(DNM_PAID_AMT,0)>0  select P_CODE ,P_NAME,P_ADD1 ,P_CONTACT ,P_PHONE,BPM_INV_NO ,case  when  BPM_DATE is NULL then INM_DATE else BPM_DATE end as BPM_DATE ,BPM_PAYABLE_AMT,INM_NO ,INM_DATE ,INM_RECV_AMT ,DUE_DATE ,DUE_DAYS ,flag  from @temp  where flag=1  order by BPM_DATE delete from @temp");
                else
                    dtOutstanding = CommonClasses.Execute("declare @temp table(Id int NOT NULL identity(1,1),P_CODE int,P_NAME varchar(500),P_ADD1 varchar(max),P_CONTACT varchar(500),P_PHONE varchar(500),BPM_INV_NO varchar(500),BPM_DATE datetime,BPM_PAYABLE_AMT float,INM_NO varchar(500),INM_DATE datetime,INM_RECV_AMT float,DUE_DATE datetime,DUE_DAYS int,flag bit) insert into @temp select P_CODE,P_NAME,P_ADD1,P_CONTACT,P_PHONE,BPM_INV_NO,ISNULL(BPM_DATE,'') AS BPM_DATE,isnull(BPM_G_AMT,0)-isnull(BPM_PAID_AMT,0) as BPM_PAYABLE_AMT,0,null,0,DATEADD(DAY,convert(int,P_CREDITDAYS),BPM_DATE),DATEDIFF(day,DATEADD(DAY,convert(int,P_CREDITDAYS),BPM_DATE),GETDATE()),0 from BILL_PASSING_MASTER,PARTY_MASTER where " + cond + " BPM_P_CODE=P_CODE and BILL_PASSING_MASTER.ES_DELETE=0 and PARTY_MASTER.ES_DELETE=0 and BPM_G_AMT-ISNULL(BPM_PAID_AMT,0)>0 insert into @temp select P_CODE,P_NAME,P_ADD1,P_CONTACT,P_PHONE,0,null,0,INM_NO,INM_DATE,isnull(INM_G_AMT,0)-isnull(INM_RECIEVED_AMT,0),DATEADD(DAY,convert(int,P_CREDITDAYS),INM_DATE),DATEDIFF(day,DATEADD(DAY,convert(int,P_CREDITDAYS),INM_DATE),GETDATE()),1 from INVOICE_MASTER,PARTY_MASTER where " + CondInv + " INM_P_CODE=P_CODE and INVOICE_MASTER.ES_DELETE=0 and  PARTY_MASTER.ES_DELETE=0 and INM_G_AMT-ISNULL(INM_RECIEVED_AMT,0)>0 insert into @temp select P_CODE,P_NAME,P_ADD1,P_CONTACT,P_PHONE,CNM_SERIAL_NO ,CNM_DATE ,isnull(CNM_NET_AMOUNT,0)-isnull(CNM_RECIEVED_AMT,0) ,0 ,null ,0 ,DATEADD(DAY,convert(int,P_CREDITDAYS),CNM_DATE),DATEDIFF(day,DATEADD(DAY,convert(int,P_CREDITDAYS),CNM_DATE),GETDATE()),CASE P_TYPE when 1 then 1 else 0 end  from CREDIT_NOTE_MASTER,PARTY_MASTER where " + CondiCredit + " CNM_CUST_CODE=P_CODE and CREDIT_NOTE_MASTER.ES_DELETE=0 and  PARTY_MASTER.ES_DELETE=0 and CNM_NET_AMOUNT-ISNULL(CNM_RECIEVED_AMT,0)>0  insert into @temp select P_CODE,P_NAME,P_ADD1,P_CONTACT,P_PHONE, 0,null,0 ,DNM_SERIAL_NO ,DNM_DATE ,isnull(DNM_NET_AMOUNT,0)-isnull(DNM_PAID_AMT,0),DATEADD(DAY,convert(int,P_CREDITDAYS),DNM_DATE),DATEDIFF(day,DATEADD(DAY,convert(int,P_CREDITDAYS),DNM_DATE),GETDATE()),CASE P_TYPE when 1 then 1 else 0 end   from DEBIT_NOTE_MASTER,PARTY_MASTER where " + CondiDebit + "  DNM_CUST_CODE=P_CODE and DEBIT_NOTE_MASTER.ES_DELETE=0 and  PARTY_MASTER.ES_DELETE=0 and DNM_NET_AMOUNT-ISNULL(DNM_PAID_AMT,0)>0  select P_CODE ,P_NAME,P_ADD1 ,P_CONTACT ,P_PHONE,BPM_INV_NO ,case  when  BPM_DATE is NULL then INM_DATE else BPM_DATE end as BPM_DATE ,BPM_PAYABLE_AMT,INM_NO ,INM_DATE ,INM_RECV_AMT ,DUE_DATE ,DUE_DAYS ,flag  from @temp where flag=0 order by BPM_DATE  delete from @temp");
            }
            else
            {
                if (ddlType.ToString() == "0")
                    dtOutstanding = CommonClasses.Execute("declare @temps table(Id int NOT NULL identity(1,1),P_CODE int,P_NAME varchar(500),BPM_PAYABLE_AMT float,INM_RECV_AMT float,flag bit) insert into @temps select P_CODE,P_NAME,SUM(isnull(BPM_G_AMT,0))-SUM(isnull(BPM_PAID_AMT,0)),0,0  from BILL_PASSING_MASTER,PARTY_MASTER where " + cond + " BPM_P_CODE=P_CODE and PARTY_MASTER.ES_DELETE=0 and isnull(BPM_G_AMT,0)-ISNULL(BPM_PAID_AMT,0)>0 group by P_CODE,P_NAME insert into @temps select P_CODE,P_NAME,0,SUM(isnull(INM_G_AMT,0))-SUM(isnull(INM_RECIEVED_AMT,0)),1 from INVOICE_MASTER,PARTY_MASTER where " + CondInv + " INM_P_CODE=P_CODE and INVOICE_MASTER.ES_DELETE=0 and  PARTY_MASTER.ES_DELETE=0 and isnull(INM_G_AMT,0)-ISNULL(INM_RECIEVED_AMT,0)>0 group by P_CODE,P_NAME select * from @temps delete from @temps");
                else if (ddlType.ToString() == "1")
                    dtOutstanding = CommonClasses.Execute("declare @temps table(Id int NOT NULL identity(1,1),P_CODE int,P_NAME varchar(500),BPM_PAYABLE_AMT float,INM_RECV_AMT float,flag bit) insert into @temps select P_CODE,P_NAME,SUM(isnull(BPM_G_AMT,0))-SUM(isnull(BPM_PAID_AMT,0)),0,0  from BILL_PASSING_MASTER,PARTY_MASTER where " + cond + " BPM_P_CODE=P_CODE and PARTY_MASTER.ES_DELETE=0 and isnull(BPM_G_AMT,0)-ISNULL(BPM_PAID_AMT,0)>0 group by P_CODE,P_NAME insert into @temps select P_CODE,P_NAME,0,SUM(isnull(INM_G_AMT,0))-SUM(isnull(INM_RECIEVED_AMT,0)),1 from INVOICE_MASTER,PARTY_MASTER where " + CondInv + " INM_P_CODE=P_CODE and INVOICE_MASTER.ES_DELETE=0 and  PARTY_MASTER.ES_DELETE=0 and isnull(INM_G_AMT,0)-ISNULL(INM_RECIEVED_AMT,0)>0 group by P_CODE,P_NAME select * from @temps where flag=1 delete from @temps");
                else
                    dtOutstanding = CommonClasses.Execute("declare @temps table(Id int NOT NULL identity(1,1),P_CODE int,P_NAME varchar(500),BPM_PAYABLE_AMT float,INM_RECV_AMT float,flag bit) insert into @temps select P_CODE,P_NAME,SUM(isnull(BPM_G_AMT,0))-SUM(isnull(BPM_PAID_AMT,0)),0,0  from BILL_PASSING_MASTER,PARTY_MASTER where " + cond + " BPM_P_CODE=P_CODE and PARTY_MASTER.ES_DELETE=0 and isnull(BPM_G_AMT,0)-ISNULL(BPM_PAID_AMT,0)>0 group by P_CODE,P_NAME insert into @temps select P_CODE,P_NAME,0,SUM(isnull(INM_G_AMT,0))-SUM(isnull(INM_RECIEVED_AMT,0)),1 from INVOICE_MASTER,PARTY_MASTER where " + CondInv + " INM_P_CODE=P_CODE and INVOICE_MASTER.ES_DELETE=0 and  PARTY_MASTER.ES_DELETE=0 and isnull(INM_G_AMT,0)-ISNULL(INM_RECIEVED_AMT,0)>0 group by P_CODE,P_NAME select * from @temps where flag=0 delete from @temps");
                //dtOutstanding = CommonClasses.Execute("declare @temps table(Id int NOT NULL identity(1,1),P_CODE int,P_NAME varchar(500),BPM_PAYABLE_AMT float,INM_RECV_AMT float) insert into @temps select P_CODE,P_NAME,SUM(BPM_G_AMT)-SUM(BPM_PAID_AMT),0  from BILL_PASSING_MASTER,PARTY_MASTER where BPM_P_CODE=P_CODE and PARTY_MASTER.ES_DELETE=0 and BPM_G_AMT-ISNULL(BPM_PAID_AMT,0)>0 group by P_CODE,P_NAME insert into @temps select P_CODE,P_NAME,0,SUM(isnull(INM_G_AMT,0))-SUM(isnull(INM_RECIEVED_AMT,0)) from INVOICE_MASTER,PARTY_MASTER where INM_P_CODE=P_CODE and PARTY_MASTER.ES_DELETE=0 and INM_G_AMT-ISNULL(INM_RECIEVED_AMT,0)>0 group by P_CODE,P_NAME select * from @temps delete from @temps ");
            }
            DL_DBAccess = new DatabaseAccessLayer();
            DataSet ds = new DataSet();
            ds = null;

            //SqlParameter[] par = new SqlParameter[10];
            //par[0] = new SqlParameter("@FromDate", FromDate);
            //par[1] = new SqlParameter("@ToDate", ToDate);
            //par[2] = new SqlParameter("@Party_code", p_name);
            //par[3] = new SqlParameter("@PartyType", ddlType);
            //par[4] = new SqlParameter("@Reportfor", "");
            //par[5] = new SqlParameter("@ReportType", "D");
            //par[6] = new SqlParameter("@DateALL", ALL_DATE);
            //par[7] = new SqlParameter("@PartyALL", All_CUST);
            //par[8] = new SqlParameter("@CondBill", cond);
            //par[9] = new SqlParameter("@CondInv", CondInv);
            //ds = DL_DBAccess.SelectDataDataset("SP_Outstanding_stm", par, "dtOutstanding");

            #region Count
            //if (ds.r)
            //{
            ReportDocument rptname = null;
            rptname = new ReportDocument();
            if (rbtReportType.ToString() == "0")
            {
                rptname.Load(Server.MapPath("~/Account/Reports/OutstandingReport.rpt"));
                rptname.FileName = Server.MapPath("~/Account/Reports/OutstandingReport.rpt");
            }
            else
            {
                rptname.Load(Server.MapPath("~/Account/Reports/OutstandingSummary.rpt"));
                rptname.FileName = Server.MapPath("~/Account/Reports/OutstandingSummary.rpt");
            }

            rptname.Refresh();
            rptname.SetDataSource(dtOutstanding);

            rptname.SetParameterValue("txtCompanyName", Session["CompanyName"].ToString());
            rptname.SetParameterValue("txtDate", "TillDate " + ToDate);
            CrystalReportViewer1.ReportSource = rptname;

            //}
            //else
            //{
            //    PanelMsg.Visible = true;
            //    lblmsg.Text = " No Record Found! ";
            //}
            #endregion

        }
        catch (Exception Ex)
        {
            throw;
        }
    }
    #endregion

    #region btnCancel_Click
    protected void btnCancel_Click(object sender, EventArgs e)
    {
        try
        {
            Response.Redirect("~/RoportForms/View/ViewOutstandingReport.aspx", false);
        }
        catch (Exception Ex)
        {
        }
    }
    #endregion btnCancel_Click
}
